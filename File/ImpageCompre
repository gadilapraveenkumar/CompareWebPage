import cv2
import numpy as np

def compare_images(image1_path, image2_path, diff_output_path="diff.png"):
    # Load the two images
    image1 = cv2.imread(image1_path)
    image2 = cv2.imread(image2_path)

    # Resize images to the same size (optional but recommended)
    image2 = cv2.resize(image2, (image1.shape[1], image1.shape[0]))

    # Convert images to grayscale
    gray1 = cv2.cvtColor(image1, cv2.COLOR_BGR2GRAY)
    gray2 = cv2.cvtColor(image2, cv2.COLOR_BGR2GRAY)

    # Compute absolute difference
    diff = cv2.absdiff(gray1, gray2)

    # Threshold the difference
    _, thresh = cv2.threshold(diff, 30, 255, cv2.THRESH_BINARY)

    # Find contours of the differences
    contours, _ = cv2.findContours(thresh, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Draw bounding boxes around differences
    for contour in contours:
        if cv2.contourArea(contour) > 100:  # filter small changes
            x, y, w, h = cv2.boundingRect(contour)
            cv2.rectangle(image1, (x, y), (x+w, y+h), (0, 0, 255), 2)

    # Save the result
    cv2.imwrite(diff_output_path, image1)
    print(f"Difference image saved as: {diff_output_path}")

# Example usage:
compare_images("image1.jpg", "image2.jpg")